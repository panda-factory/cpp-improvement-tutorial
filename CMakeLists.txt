CMAKE_MINIMUM_REQUIRED(VERSION 3.17)

PROJECT(test VERSION 0.0.0
    DESCRIPTION ""
    HOMEPAGE_URL ""
    LANGUAGES CXX)

OPTION(USE_LIBEVENT "choose to use libevent" OFF)
OPTION(USE_LIBUV "choose to use libuv" ON)
OPTION(USE_BEAST "choose to user beast" OFF)
OPTION(ENABLE_HTTPS "enable https" ON)

if(USE_LIBEVENT)
    MESSAGE("choose to use libevent")
    ADD_DEFINITIONS(-D__USE_LIBEVENT__=1)

    FIND_PACKAGE(LibEvent REQUIRED)
    MESSAGE("LIBEVENT_INCLUDE_DIR: ${LIBEVENT_INCLUDE_DIRS}")
    MESSAGE("LIBEVENT_LIBRARY_DIR: ${LIBEVENT_LIBRARY_DIR}")
    MESSAGE("LIBEVENT_LIBRARIES: ${LIBEVENT_LIBRARIES}")

elseif(USE_LIBUV)
    MESSAGE("choose to use libuv")
    ADD_DEFINITIONS(-D__USE_LIBUV__=1)

    SET(LIBUV_INCLUDE_DIR ${PROJECT_SOURCE_DIR}/third_party/libuv/include)
    SET(LIBUV_LIBRARY_DIR ${PROJECT_SOURCE_DIR}/third_party/libuv)
    SET(LIBUV_LIBRARIES uv http_parser)
    SET(LIBHTTP_PARSER_INCLUDE_DIR  ${PROJECT_SOURCE_DIR}/third_party/http-parser)
    MESSAGE("LIBUV_INCLUDE_DIR: ${LIBUV_INCLUDE_DIR}")
    MESSAGE("LIBUV_LIBRARY_DIR: ${LIBUV_LIBRARY_DIR}")
    MESSAGE("LIBUV_LIBRARIES: ${LIBUV_LIBRARIES}")
elseif(USE_BEAST)
    MESSAGE("choose to use beast")
    ADD_DEFINITIONS(-D__USE_BEAST__=1)
endif ()

SET(PROJECT_ROOT_PATH "${CMAKE_SOURCE_DIR}")
SET(EXECUTABLE_OUTPUT_PATH "${CMAKE_SOURCE_DIR}/bin/")
SET(LIBRARY_OUTPUT_PATH "${CMAKE_SOURCE_DIR}/lib/")

INCLUDE_DIRECTORIES("${PROJECT_ROOT_PATH}/include/")
LINK_DIRECTORIES("${CMAKE_SOURCE_DIR}/lib/")

# For Openssl
if (ENABLE_HTTPS)
    MESSAGE("enable https")
    ADD_DEFINITIONS(-D__ENABLE_HTTPS__=1)
    SET(OPENSSL_ROOT_DIR "${PROJECT_SOURCE_DIR}/third_party/openssl-1.1.1i")
    FIND_PACKAGE(OpenSSL REQUIRED)
    MESSAGE("OPENSSL_INCLUDE_DIR: ${OPENSSL_INCLUDE_DIR}")
endif ()

ADD_SUBDIRECTORY(src)
#add_custom_target(mytest COMMAND mingw32-make -C third_party/http-parser
#    CLION_EXE_DIR=${PROJECT_BINARY_DIR})
ADD_SUBDIRECTORY(third_party/http-parser)

SET(CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/CMakeModules)
ADD_SUBDIRECTORY(test)